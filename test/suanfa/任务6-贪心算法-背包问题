/*贪心算法---背包问题*/
#include<stdio.h>
#include<string.h>
#include<algorithm>
using namespace std;
#define MAXN 51
//问题表示
int n=5;         //5个物品
double W=100;    //背包限重
struct NodeType{
	double w;
	double v;
	double p;    //权重p=v/w
	bool operator<(const NodeType &s) const
	{
		return p>s.p;    //按权重p递减排序
	}
};
NodeType A[]={{0},{10,20},{20,30},{30,66},{40,40},{50,60}};  //下标为0的元素不用 这里输入每一个物品w和v
//求解结果
double V;        //最大价值
double x[MAXN];  //最优解向量
void Knap()      //求解背包问题并返回总价值
{
	V=0;
	double weight=W;
	memset(x,0,sizeof(x)); //初始化x向量
	int i=1;
	while(A[i].w<weight)
	{
		x[i]=1;
		weight-=A[i].w;
		V+=A[i].v;
		i++;
	}
	if(weight>0)             //余下重量大于0
	{
		x[i]=weight/A[i].w;  //将物品i的一部分装入
		V+=x[i]*A[i].v;
	}
}
void dispA()  //输出A
{
	int i;
	printf("\tW\tV\tV/W\n");
	for(i=1;i<=n;i++)
		printf("\t%g\t%g\t%3.1f\n",A[i].w,A[i].v,A[i].p);
}
main()
{
	printf("求解过程：\n");
	for(int i=1;i<=n;i++)
		A[i].p=A[i].v/A[i].w;
	printf("排序前：\n"); dispA();
	sort(A+1,A+n+1);        //排序
	printf("排序后：\n"); dispA();
	Knap();
	printf(" x:[");
	for(int j=1;j<=n;j++)
		printf("%g, ",x[j]);
	printf("%g]\n",x[n]);
	printf(" 总价值为=%g\n",V);
}