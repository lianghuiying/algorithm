//递归调用快速排序
#include<iostream>
#include <algorithm>
using namespace std;
template<class Type>
int Partition(Type a[], int p, int r)
{
	int i = p, j = r + 1;
	Type x = a[p];
	while (i<j)
	{
		while (a[++i]<x&&i<r);
		while (a[--j]>x);
		if (i >= j)break;
		swap(a[i], a[j]);
	}
	a[p] = a[j];
	a[j] = x;
	return j;

}
template<class Type>
void QuickSort(Type a[], int p, int r)
{
	if (p<r)
	{
		int q = Partition(a, p, r);
		QuickSort(a, p, q - 1);
		QuickSort(a, q + 1, r);
	}
}

int main()
{
	int n, data[100];
	cout << "请输入数组的长度" << endl;
	cin >> n;
	cout << "请输入数组" << endl;
	for (int i = 0; i < n; i++)
	{
		cin >> data[i];
	}
	QuickSort(data, 0, n - 1);
	for (int i = 0; i < n; i++)
	{
		cout << data[i] << "  ";
	}
	cout << endl;
	system("pause");
	return 0;
}
